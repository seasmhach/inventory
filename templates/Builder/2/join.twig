{% for foreign_key in table.foreign_keys %}
	/**
	 * @return \Builder\{{ foreign_key.namespace }}
	 */
	public function inner_join_{{ foreign_key.table }}_by{% for left_column, right_column in foreign_key.columns %}_{{ left_column }}{% if false == loop.last %}_and{% endif %}{% endfor %}(string $alias = '{{ foreign_key.table }}', bool $include = false) {
		${{ foreign_key.table }} = new {{ foreign_key.namespace }}($alias);
		$sql = "INNER JOIN `{{ foreign_key.table }}` AS `$alias`";
		$sql .= "\n\tON";
		$sql .= "{% for left_column, right_column in foreign_key.columns %}{% if false == loop.first %}\n\tAND{% endif %} $this->alias.{{ left_column }} = $alias.{{ right_column }}{% endfor %}";

		$this->joins[$alias] = [
			'builder' => ${{ foreign_key.table }},
			'table' => $alias,
			'sql' => $sql,
			'include' => $include,
		];

		return ${{ foreign_key.table }};
	}

	/**
	 * @return \Builder\{{ foreign_key.namespace }}
	 */
	public function left_join_{{ foreign_key.table }}_by{% for left_column, right_column in foreign_key.columns %}_{{ left_column }}{% if false == loop.last %}_and{% endif %}{% endfor %}(string $alias = '{{ foreign_key.table }}', bool $include = false) {
		${{ foreign_key.table }} = new {{ foreign_key.namespace }}($alias);
		$sql = "LEFT JOIN `{{ foreign_key.table }}` AS `$alias`";
		$sql .= "\n\tON";
		$sql .= "{% for left_column, right_column in foreign_key.columns %}{% if false == loop.first %}\n\tAND{% endif %} $this->alias.{{ left_column }} = $alias.{{ right_column }}{% endfor %}";

		$this->joins[$alias] = [
			'builder' => ${{ foreign_key.table }},
			'table' => $alias,
			'sql' => $sql,
			'include' => $include,
		];

		return ${{ foreign_key.table }};
	}

	/**
	 * @return \Builder\{{ foreign_key.namespace }}
	 */
	public function right_join_{{ foreign_key.table }}_by{% for left_column, right_column in foreign_key.columns %}_{{ left_column }}{% if false == loop.last %}_and{% endif %}{% endfor %}(string $alias = '{{ foreign_key.table }}', bool $include = false) {
		${{ foreign_key.table }} = new {{ foreign_key.namespace }}($alias);
		$sql = "RIGHT JOIN `{{ foreign_key.table }}` AS `$alias`";
		$sql .= "\n\tON";
		$sql .= "{% for left_column, right_column in foreign_key.columns %}{% if false == loop.first %}\n\tAND{% endif %} $this->alias.{{ left_column }} = $alias.{{ right_column }}{% endfor %}";

		$this->joins[$alias] = [
			'builder' => ${{ foreign_key.table }},
			'table' => $alias,
			'sql' => $sql,
			'include' => $include,
		];

		return ${{ foreign_key.table }};
	}

{% endfor %}
{% for reference in table.references %}
	public function inner_join_by_{% for column in reference %}{{ column }}{% if false == loop.last %}_and_{% endif %}{% endfor %}($subquery, string $alias) {
		$sql = "INNER JOIN\n\t";
		$sql .= '(' . preg_replace("/\n/", "\n\t", $subquery->join()) . ") AS `$alias`";
		$sql .= "\nON";
{% for column in reference  %}
		$sql .= "\n\t$this->alias.{{ column }} = $alias.{{ column }}";
{% if false == loop.last %}
		$sql .= "\nAND";
{% endif %}
{% endfor %}

		$columns = $subquery->get_list();

		unset({% for column in reference %}$columns['{{ column }}']{% if false == loop.last %}, {% endif %}{% endfor %});

		foreach (array_keys($columns) as $column_alias) {
			$this->list($alias . '.' . $column_alias, $column_alias);
		}

		$this->joins[$alias] = $sql;
	}

	public function left_join_by_{% for column in reference %}{{ column }}{% if false == loop.last %}_and_{% endif %}{% endfor %}($subquery, string $alias) {
		$sql = "LEFT JOIN\n\t";
		$sql .= '(' . preg_replace("/\n/", "\n\t", $subquery->join()) . ") AS `$alias`";
		$sql .= "\nON";
{% for column in reference  %}
		$sql .= "\n\t$this->alias.{{ column }} = $alias.{{ column }}";
{% if false == loop.last %}
		$sql .= "\nAND";
{% endif %}
{% endfor %}

		$columns = $subquery->get_list();

		unset({% for column in reference %}$columns['{{ column }}']{% if false == loop.last %}, {% endif %}{% endfor %});

		foreach (array_keys($columns) as $column_alias) {
			$this->list($alias . '.' . $column_alias, $column_alias);
		}

		$this->joins[$alias] = $sql;
	}

	public function right_join_by_{% for column in reference %}{{ column }}{% if false == loop.last %}_and_{% endif %}{% endfor %}($subquery, string $alias) {
		$sql = "RIGHT JOIN\n\t";
		$sql .= '(' . preg_replace("/\n/", "\n\t", $subquery->join()) . ") AS `$alias`";
		$sql .= "\nON";
{% for column in reference  %}
		$sql .= "\n\t$this->alias.{{ column }} = $alias.{{ column }}";
{% if false == loop.last %}
		$sql .= "\nAND";
{% endif %}
{% endfor %}

		$columns = $subquery->get_list();

		unset({% for column in reference %}$columns['{{ column }}']{% if false == loop.last %}, {% endif %}{% endfor %});

		foreach (array_keys($columns) as $column_alias) {
			$this->list($alias . '.' . $column_alias, $column_alias);
		}

		$this->joins[$alias] = $sql;
	}

{% endfor %}
